import {RouterStateSerializer} from '@ngrx/router-store';import {Params, RouterStateSnapshot} from '@angular/router';export interface RouterStateTitle {  url: string;  params: Params;  queryParams: Params;  title(context: Object): string;}/** * NgRx Router Serializer to auto extract *   - router params, AND *   - 'title' data * from the router data (if available) * * @see https://alligator.io/angular/title-updater/ */export class CustomRouterStateSerializer    implements RouterStateSerializer<RouterStateTitle> {  serialize(routerState: RouterStateSnapshot): RouterStateTitle {    let childRoute = routerState.root;    while (childRoute.firstChild) {      childRoute = childRoute.firstChild;    }    const { url, root: { queryParams } } = routerState;    const { params } = childRoute;    const title = childRoute.data && childRoute.data['title'];    // Only return an object including the URL, params and query params    // instead of the entire snapshot    return { url, params, queryParams, title };  }}